@use "../utilities/initial-variables" as iv;
@use "../utilities/mixins" as mx;

$container-offset: 2 * iv.$gap !default;
$container-max-width: iv.$fullhd !default;

.#{iv.$class-prefix}container {
  flex-grow: 1;
  margin-block: 0;
  margin-inline: auto;
  position: relative;
  inline-size: 100%;

  &.#{iv.$class-prefix}is-fluid {
    max-inline-size: none !important;
    padding-inline-start: iv.$gap;
    padding-inline-end: iv.$gap;
    inline-size: 100%;
  }

  @include mx.desktop {
    max-inline-size: iv.$desktop - $container-offset;
  }

  @include mx.until-widescreen {
    &.#{iv.$class-prefix}is-widescreen:not(.#{iv.$class-prefix}is-max-desktop) {
      max-inline-size: min(iv.$widescreen, $container-max-width) - $container-offset;
    }
  }

  @include mx.until-fullhd {
    &.#{iv.$class-prefix}is-fullhd:not(.#{iv.$class-prefix}is-max-desktop):not(
        .#{iv.$class-prefix}is-max-widescreen
      ) {
      max-inline-size: min(iv.$fullhd, $container-max-width) - $container-offset;
    }
  }

  @include mx.widescreen {
    &:not(.#{iv.$class-prefix}is-max-desktop) {
      max-inline-size: min(iv.$widescreen, $container-max-width) - $container-offset;
    }
  }

  @include mx.fullhd {
    &:not(.#{iv.$class-prefix}is-max-desktop):not(
        .#{iv.$class-prefix}is-max-widescreen
      ) {
      max-inline-size: min(iv.$fullhd, $container-max-width) - $container-offset;
    }
  }
}
